name: CommentOps
on: [issue_comment]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    # Filter comments that trigger a deploy:
    - uses: docker://thepwagner/comment-deploy:latest
      id: comment
      with:
        entrypoint: comment-deploy
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ENVIRONMENTS: beta,latest

    # Your deploy steps go here; this repo publishes to GPR with an inline script:
    - name: Deployment
      id: deployment
      env:
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        DEPLOYMENT_ID: ${{ steps.comment.outputs.DEPLOYMENT_ID }}
        ENVIRONMENT: ${{ steps.comment.outputs.ENVIRONMENT }}
        DEPLOY_REF: ${{ steps.comment.outputs.DEPLOY_REF }}
      run: |
        # Exit if there's no environment; a "neutral/78" exit above would be handy
        [ -z "${ENVIRONMENT}" ] && exit 0

        set -e
        IMG="thepwagner/comment-deploy:${ENVIRONMENT}"
        git checkout "$DEPLOY_REF"
        docker build -t "$IMG" .

        docker login -u thepwagner -p "$DOCKERHUB_PASSWORD"
        echo ::set-output name=DEPLOYMENT_LOG_PATH,::log.txt
        (sh | tee log.txt) <<EOF
          docker push "$IMG"
        EOF

        echo ::set-output name=DEPLOYMENT_STATUS,::success

    # If deploy succeeds/fails, always report status:
    - uses: docker://thepwagner/comment-deploy:latest
      if: always()
      with:
        entrypoint: deploy-report
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEPLOYMENT_ID: ${{ steps.comment.outputs.DEPLOYMENT_ID }}
        ENVIRONMENT: ${{ steps.comment.outputs.ENVIRONMENT }}
        DEPLOYMENT_STATUS: ${{ steps.deployment.outputs.DEPLOYMENT_STATUS }}
        DEPLOYMENT_LOG_PATH: ${{ steps.deployment.outputs.DEPLOYMENT_LOG_PATH }}
